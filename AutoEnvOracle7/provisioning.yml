---
- hosts: server
  vars:
    graphite_state: "not_installed"
    tomcat_state: "not_installed"
    jetty_state: "not_installed"
    distant_home: "/home/{{ distant_user }}"
    provisioning_path: "{{ distant_home }}/provisioning"
  sudo: yes
  user: ${distant_user}
  tasks:
    - name: Clean local project
      local_action: shell cd ../vanillapull/; mvn clean; cd gatling-json/gatling; mvn clean; cd ../gatling-highcharts; mvn clean; 
      sudo: false
      when: ${aws}
    - name: archive local project
      local_action: command tar -vzcf tmp/vanillapull.tar.gz ../vanillapull
      sudo: false
      when: ${aws}
    - name: archive provisioning
      local_action: command tar -vzcf tmp/provisioning.tar.gz ./provisioning
      sudo: false
    - name: creating required path
      command: mkdir -p "{{ distant_home }}/parallel-lab/vanillapull/"
    - name: creating required path 2
      command: mkdir -p {{ distant_home }}/toBringBack/
    - name: creating required path 3
      command: mkdir -p {{ distant_home }}/provisioning/
    - name: transfer and untar projects
      unarchive: src=tmp/vanillapull.tar.gz dest={{ distant_home }}/parallel-lab/
      when: ${aws}
    - name: transfer and untar provisioning
      unarchive: src=tmp/provisioning.tar.gz dest={{ distant_home }}/
    - name: update packages
      apt: update_cache=yes
    - name: ensure packages required are installed
      apt: pkg={{ item }} state=latest
      with_items:
        - maven
        - collectd
    - name: ensure optional packages required are installed
      apt: pkg={{ item }} state=latest
      with_items:
        - python-apt
        - git
      when: ${full}
    - name: add java oracle repo
      apt_repository: repo='ppa:webupd8team/java' state=present
    - name: Accept Oracle License
      shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
    - name: installing java 7
      apt: pkg=oracle-java7-installer state=latest update-cache=yes force=yes
      when: inventory_hostname == "servero7"
    - name: set java 7 as default
      apt: pkg=oracle-java7-set-default
      when: inventory_hostname == "servero7"
    - name: installing java 8
      apt: pkg=oracle-java8-installer state=latest update-cache=yes force=yes
      when: inventory_hostname == "servero8"
    - name: set java 8 as default
      apt: pkg=oracle-java8-set-default
      when: inventory_hostname == "servero8"
    - name: configure collectd
      command: cp {{ provisioning_path }}/collectd.conf /etc/collectd/collectd.conf
      sudo: true
    - name: testif graphite is already installed
      action: shell test -d {{ distant_home }}/setup-graphite/ && echo "\"installed\"" || echo "\"not_installed\""
      register: graphite_state
    - name: get graphite
      command: git clone https://github.com/gdbtek/setup-graphite.git
      when: ${full} and ${graphite_state.stdout} == "not_installed"
    - name: configure graphite
      command: bash {{ distant_home }}/setup-graphite/{{ distant_user }}.bash --login 'root' --password 'root' --email 'bfi@octo.com'
      when: ${full} and ${graphite_state.stdout} == "not_installed"
      sudo: true
    - name: testif tomcat is already installed
      action: shell test -d {{ distant_home }}/apache-tomcat-7.0.52/ && echo "\"installed\"" || echo "\"not_installed\""
      register: tomcat_state
    - name: download tomcat
      get_url: url=http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.52/bin/apache-tomcat-7.0.52.tar.gz dest={{ distant_home }}/
      when: ${tomcat_state.stdout} == "not_installed"
    - name: untar tomcat
      command: tar xvfz apache-tomcat-7.0.52.tar.gz
      when: ${tomcat_state.stdout} == "not_installed"
    - name: configure tomcat
      command: cp {{ provisioning_path }}/tomcat-users.xml {{ distant_home }}/apache-tomcat-7.0.52/conf/
    - name: configure tomcat 2
      command: cp {{ provisioning_path }}/server.xml {{ distant_home }}/apache-tomcat-7.0.52/conf/
    - name: testif jetty is already installed
      action: shell test -d {{ distant_home }}/jetty-distribution-9.1.3.v20140225/ && echo "\"installed\"" || echo "\"not_installed\""
      register: jetty_state
    - name: download jetty
      get_url: url="http://eclipse.org/downloads/download.php?file=/jetty/9.1.3.v20140225/dist/jetty-distribution-9.1.3.v20140225.tar.gz&r=1" dest={{ distant_home }}/
      sudo: false
      when: ${jetty_state.stdout} == "not_installed"
    - name: untar jetty
      command: tar xvfz jetty-distribution-9.1.3.v20140225.tar.gz
      sudo: false
      when: ${jetty_state.stdout} == "not_installed"
    - name: configure jetty
      shell: cd jetty-distribution-9.1.3.v20140225/bin/ && sed '1d' jetty.sh > jetty.sh.tmp && mv jetty.sh.tmp jetty.sh && echo '#!/usr/bin/env bash\nJAVA_OPTIONS=$2' > jetty.sh.tmp && cat jetty.sh >> jetty.sh.tmp && mv jetty.sh.tmp jetty.sh && chmod 777 jetty.sh && sed -i '/thread/s/^/#/g' ../start.ini
      sudo: false
      when: ${jetty_state.stdout} == "not_installed"
- hosts: gatling
  vars:
    vanillapull_src_path: "../vanillapull/"
    vanillapull_dest_path: "{{ distant_home }}/parallel-lab/vanillapull/"
    distant_home: "/home/{{ distant_user }}"
    provisioning_path: "{{ distant_home }}/provisioning"
  sudo: yes
  user: ${distant_user}
  tasks:
    - name: Clean local project
      local_action: shell cd ../vanillapull/; mvn clean; cd gatling-json/gatling; mvn clean; cd ../gatling-highcharts; mvn clean; 
      sudo: false
    - name: archive local project
      local_action: command tar -vzcf tmp/vanillapull.tar.gz ../vanillapull
      sudo: false
    - name: archive provisioning
      local_action: command tar -vzcf tmp/provisioning.tar.gz ./provisioning
      sudo: false
    - name: creating required path
      command: mkdir -p "{{ distant_home }}/parallel-lab/vanillapull/"
    - name: creating required path 2
      command: mkdir -p {{ distant_home }}/toBringBack/
    - name: creating required path 3
      command: mkdir -p {{ distant_home }}/provisioning/
    - name: handleRights
      command: chmod 777 {{ distant_home }}/provisioning/
      sudo: true
    - name: transfer and untar projects
      unarchive: src=tmp/vanillapull.tar.gz dest={{ distant_home }}/parallel-lab/
    - name: transfer and untar provisioning
      unarchive: src=tmp/provisioning.tar.gz dest={{ distant_home }}/
    - name: update packages
      apt: update_cache=yes
    - name: ensure packages required are installed
      apt: pkg={{ item }} state=latest
      with_items:
        - openjdk-7-jdk
        - maven
    - name: compile gatling-json/gatling
      shell: cd {{ distant_home }}/parallel-lab/vanillapull/gatling-json/gatling/; mvn install
    - name: compile gatling-json/gatling-highcharts
      shell: cd {{ distant_home }}/parallel-lab/vanillapull/gatling-json/gatling-highcharts/; mvn install

