---
- hosts: server
  vars:
    vagrant_path: /vagrant
    tomcat_path: "/home/vagrant/apache-tomcat-7.0.52/"
    jetty_path: "/home/vagrant/jetty-distribution-9.1.3.v20140225/"
    vanillapull_dest_path: "/home/vagrant/parallel-lab/vanillapull/"
    webappWriterPath: "-DwriterPath=/vagrant/tmp/threadCount.json"
  sudo: yes
  user: vagrant
  tasks:
    - name: clean
      command: rm /vagrant/tmp/threadCount.json
      ignore_errors: true
      sudo: true
    - name: prepare log gc
      command: mkdir -p /vagrant/tmp/log_gc_{{ launchDate }}
    - name: shutdown tomcat
      command: bash {{ tomcat_path }}/bin/shutdown.sh
      sudo: true
    - name: shutdown jetty
      command: bash {{ jetty_path }}/bin/jetty.sh stop
      sudo: true
    - name: shutdown httpcore
      command: wget http://localhost:8080/vanillapull-1.0-SNAPSHOT/stop
      ignore_errors: yes
      notify: ${server}
  handlers:
    - name: tomcat
      command: ls
      notify: startup tomcat
    - name: jetty
      command: ls
      notify: startup jetty
    - name: httpcore
      command: ls
      notify: startup httpcore

    - name: startup tomcat
      shell: JAVA_OPTS="-XX:+PrintGCDetails -XX:+PrintTenuringDistribution -Xloggc:/vagrant/tmp/log_gc_{{ launchDate }}/{{ implementation }}_{{ users }}users_{{ iterations }}_iter.gclog -Dimplementation={{ implementation }} -Diterations={{ iterations }} -Dusers={{ users }} -DnbThreads={{ nbThreads }} {{ webappWriterPath }}" nohup {{ tomcat_path }}/bin/startup.sh &
      sudo: true

    - name: startup jetty
      command: bash {{ jetty_path }}/bin/jetty.sh start "-XX:+PrintGCDetails -XX:+PrintTenuringDistribution -Xloggc:/vagrant/tmp/log_gc_{{ launchDate }}/{{ implementation }}_{{ users }}users_{{ iterations }}_iter.gclog -Dimplementation={{ implementation }} -Diterations={{ iterations }} -Dusers={{ users }} -Dthreads.min={{ nbThreads }} -Dthreads.max={{ nbThreads }} {{ webappWriterPath }}"
      sudo: true

    - name: startup httpcore
      shell: cd {{ vanillapull_dest_path }}; mvn -e -pl webapp exec:java -XX:+PrintGCDetails -XX:+PrintTenuringDistribution -Xloggc:/vagrant/tmp/log_gc_{{ launchDate }}/{{ implementation }}_{{ users }}users_{{ iterations }}_iter.gclog -Dimplementation={{ implementation }} -Diterations={{ iterations }} -Dusers={{ users }} {{ webappWriterPath }} 1>std.log 2>err.log
      async: 1000000000000000000
      poll: 0

- hosts: gatling
  vars:
    vagrant_path: /vagrant
    vanillapull_src_path: "../vanillapull/"
    vanillapull_dest_path: "/home/vagrant/parallel-lab/vanillapull/"
    results_dest_path: "{{ vagrant_path }}/scenarios/{{ scenario }}/"
    results_dest_path_launch: "{{ results_dest_path }}/{{ launchDate }}"
    results_src_path: "{{ vanillapull_dest_path }}/gatling/target/gatling/results/"
  sudo: yes
  user: vagrant
  tasks:
    - name: launch shoot
      shell: cd {{vanillapull_dest_path}}; mvn -pl gatling gatling:execute -Dgatling.simulationClass=PricingSimulation -Dip=192.168.17.3 -Dusers={{ users }} -Dimplementation={{ implementation }} -Diterations={{ iterations }} -DlogPath=/home/vagrant/datalog-{{ launchDate }} -Dduration={{ duration }}
    - name: stop server
      shell: wget 192.168.17.3:8080/vanillapull-1.0-SNAPSHOT/services/stopper/stop/
      ignore_errors: true
    - name: clean reports 1
      shell: rm -r {{ results_dest_path_launch }}/{{ implementation }}_{{ users }}users_{{ iterations }}iter_results/; mkdir -p {{ results_dest_path_launch }}/{{ implementation }}_{{ users }}users_{{ iterations }}iter_results/;
    - name: agregate reports 1
      shell: cat /vagrant/tmp/threadCount.json >> /home/vagrant/datalog-{{ launchDate }}.json
      sudo: true
      ignore_errors: yes
    - name: agregate reports 2.1
      shell: mkdir -p {{ results_dest_path }}/log_gc_{{ launchDate }}
      sudo: true
    - name: agregate reports 2.2
      shell: mv /vagrant/tmp/log_gc_{{ launchDate }}/* {{ results_dest_path }}/log_gc_{{ launchDate }}/
      sudo: true
      ignore_errors: yes
    - name: clean reports 2
      shell: cp /home/vagrant/datalog-{{ launchDate }}.json {{ results_dest_path }}/datalog-{{ launchDate }}.json
    - name: clean reports 2.1
      shell: cp /home/vagrant/datalog-{{ launchDate }}.csv {{ results_dest_path }}/datalog-{{ launchDate }}.csv
    - name: clean reports 4
      command: cp -R {{ results_src_path }} {{ results_dest_path_launch }}/{{ implementation }}_{{ users }}users_{{ iterations }}iter_results/
    - name: clean reports 5
      command: rm -r {{ results_src_path }}