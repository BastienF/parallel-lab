---
- hosts: server
  vars:
    distant_home: "/home/{{ distant_user }}"
    tomcat_path: "{{ distant_home }}/apache-tomcat-7.0.52/"
    jetty_path: "{{ distant_home }}/jetty-distribution-9.1.3.v20140225/"
    vanillapull_dest_path: "{{ distant_home }}/parallel-lab/vanillapull/"
    to_bring_back: "{{ distant_home }}/toBringBack"
    webappWriterPath: "{{ to_bring_back }}/threadCount.json"
    full_params: "-Dimplementation={{ implementation }} -Diterations={{ iterations }} -Dusers={{ users }} -DnbThreads={{ nbThreads }} -DminNbThreads={{ minNbThreads }} -Dduration={{ duration }} -Dwarmup=true -DsynchronizationMode={{ synchronizationMode }} -DnoSynchronization_delay={{ noSynchronization_delay }}  -Dserver={{ server }} -Daws={{ aws }} -Dlanguage={{ language }} -XX:+PrintGCDetails -XX:+PrintTenuringDistribution -Xloggc:{{ to_bring_back }}/log_gc_{{ launchDate }}/{{ implementation }}_{{ users }}users_{{ iterations }}_iter.gclog -DpoolLogPath={{ poolLogPath }}"
  sudo: yes
  user: ${distant_user}
  tasks:
    - name: clean
      command: rm {{ to_bring_back }}/threadCount.json
      ignore_errors: true
      sudo: true
    - name: prepare log gc
      command: mkdir -p {{ to_bring_back }}/log_gc_{{ launchDate }}
    - name: shutdown tomcat
      shell: ${tomcat_path}/bin/shutdown.sh; pkill -f catalina
      ignore_errors: yes
      sudo: true
    - name: shutdown jetty
      command: bash {{ jetty_path }}/bin/jetty.sh stop
      sudo: true
    - name: shutdown httpcore
      command: wget http://localhost:8080/vanillapull-1.0-SNAPSHOT/stopper/stop/
      ignore_errors: yes
      notify: ${server}
  handlers:
    - name: tomcat
      command: ls
      notify: startup tomcat
    - name: jetty
      command: ls
      notify: startup jetty
    - name: httpcore
      command: ls
      notify: startup httpcore

    - name: startup tomcat
      shell: JAVA_OPTS="{{ full_params }} -DwriterPath={{ webappWriterPath }}" nohup {{ tomcat_path }}/bin/startup.sh &
      sudo: true

    - name: startup jetty
      command: bash {{ jetty_path }}/bin/jetty.sh start "{{ full_params }} -Dthreads.min={{ minNbThreads }} -Dthreads.max={{ nbThreads }} -DwriterPath={{ webappWriterPath }}"
      sudo: true

    - name: startup httpcore
      shell: cd {{ vanillapull_dest_path }}; mvn -pl webapp exec:java {{full_params}} -DwriterPath={{ webappWriterPath }}" 1>std.log 2>err.log
      async: 1000000000000000000
      poll: 0

- hosts: gatling
  vars:
    distant_home: "/home/{{ distant_user }}"
    vanillapull_src_path: "../"
    vanillapull_dest_path: "{{ distant_home }}/parallel-lab/vanillapull/"
    to_bring_back: "{{ distant_home }}/toBringBack"
    results_dest_path: "./scenarios/{{ scenario }}/"
    results_dest_path_launch: "{{ results_dest_path }}/{{ launchDate }}"
    results_src_path: "{{ vanillapull_dest_path }}/gatling/target/gatling/results/"
    to_bring_back: "{{ distant_home }}/toBringBack"
    webappWriterPath: "{{ to_bring_back }}/threadCount.json"
    webappLogGCPath: "{{ to_bring_back }}/log_gc_{{ launchDate }}"
    serverIp: "{{ hostvars['servero7']['privateIp'] }}"
    full_params: "-Dgatling.simulationClass=PricingSimulation -Dip={{ serverIp }} -Dusers={{ users }} -Dimplementation={{ implementation }} -Diterations={{ iterations }} -DnbThreads={{ nbThreads }} -DminNbThreads={{ minNbThreads }} -DsynchronizationMode={{ synchronizationMode }} -DnoSynchronization_delay={{ noSynchronization_delay }}  -Dserver={{ server }} -Daws={{ aws }} -Dlanguage={{ language }} -DconsolidateReport={{ consolidateReport }}"
  sudo: yes
  user: ${distant_user}
  tasks:
    - name: warm up shoot
      shell: cd {{vanillapull_dest_path}}; mvn -pl gatling gatling:execute {{ full_params }} -DlogPath=/dev/null -Dduration=30
    - name: clean warm up reports
      command: rm -r {{ results_src_path }}
    - name: Start server reccording
      shell: wget {{ serverIp }}:8080/vanillapull-1.0-SNAPSHOT/services/stopper/start/; sleep 1
    - name: launch shoot
      shell: cd {{vanillapull_dest_path}}; mvn -pl gatling gatling:execute {{ full_params }} -DlogPath={{ distant_home }}/gatlingResult-{{ launchDate }} -Dduration={{ duration }}
    - name: stop server
      shell: wget {{ serverIp }}:8080/vanillapull-1.0-SNAPSHOT/services/stopper/stop/; sleep 1
      ignore_errors: true
    - name: copy secukey
      copy: src=~/.vagrant.d/insecure_private_key dest={{ distant_home }}/provisioning/parallelLab.pem owner=vagrant mode=0700
      sudo: false
      when: ${aws} == false
    - name: clean reports 1
      local_action: shell rm -r {{ results_dest_path_launch }}/{{ implementation }}_{{ users }}users_{{ iterations }}iter_results/; mkdir -p {{ results_dest_path_launch }}/{{ implementation }}_{{ users }}users_{{ iterations }}iter_results/;
      sudo: false
    - name: agregate reports 1.1
      command: scp -i {{ distant_home }}/provisioning/parallelLab.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no {{ distant_user }}@{{ serverIp }}:{{ webappWriterPath }} {{ webappWriterPath }}
      sudo: true
    - name: clean gatling if SynchronizationMode
      shell: cat {{ distant_home }}/gatlingResult-{{ launchDate }}.json >> {{ distant_home }}/datalog-{{ launchDate }}.json
      sudo: true
      when: ${synchronizationMode} == true
    - name: agregate reports 1.2
      shell: cat {{ webappWriterPath }} >> {{ distant_home }}/datalog-{{ launchDate }}.json
      sudo: true
      ignore_errors: yes
    - name: agregate reports 2.1
      local_action: shell mkdir -p {{ results_dest_path }}/log_gc_{{ launchDate }}
      sudo: false
    - name: agregate reports 2.2
      command: scp -r -i {{ distant_home }}/provisioning/parallelLab.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no {{ distant_user }}@{{ serverIp }}:{{ webappLogGCPath }} {{ webappLogGCPath }}
      sudo: true
    - name: agregate reports 2.3
      synchronize: mode=pull src={{ webappLogGCPath }} dest={{ results_dest_path }}/log_gc_{{ launchDate }}/
      sudo: true
    - name: clean reports 2
      fetch: src={{ distant_home }}/datalog-{{ launchDate }}.json dest={{ results_dest_path }}/datalog-{{ launchDate }}.json flat=yes
    - name: clean reports 2.1
      fetch: src={{ distant_home }}/gatlingResult-{{ launchDate }}.csv dest={{ results_dest_path }}/datalog-{{ launchDate }}.csv flat=yes
    - name: clean reports 4
      synchronize: mode=pull src={{ results_src_path }} dest={{ results_dest_path_launch }}/{{ implementation }}_{{ users }}users_{{ iterations }}iter_results/
    - name: clean reports 5
      command: rm -r {{ results_src_path }}